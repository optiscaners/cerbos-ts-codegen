apiVersion: api.cerbos.dev/v1

resourcePolicy:
  version: default
  resource: fleet
  variables:
    import:
      - with_fleet_resource_variables
    local:
      user_role: P.attr.fleets[R.id].role

  rules:
    - actions: [read]
      effect: EFFECT_ALLOW
      roles: [user]
      condition:
        match:
          any:
            of:
              - expr: size(V.common_fleet_groups) > 0
              - expr: V.user_role != null

    - actions: ["*"]
      effect: EFFECT_ALLOW
      roles: [user]
      condition:
        match:
          expr: V.shared_fleet_groups.exists(g, P.attr.fleetGroups[g].role == "owner")

    - actions: [create]
      effect: EFFECT_ALLOW
      roles: [user]
      condition:
        match:
          expr: V.is_owner_of_common_fleet_group

    - actions: [create:without_group]
      effect: EFFECT_DENY
      roles: [user]
      condition:
        match:
          expr: V.is_owner_of_common_fleet_group

    - actions: [update]
      effect: EFFECT_ALLOW
      roles: [user]
      condition:
        match:
          expr: V.user_role == "editor"

    - actions: ["*"]
      effect: EFFECT_ALLOW
      roles: [admin]

  schemas:
    principalSchema:
      ref: cerbos:///principal.json
    resourceSchema:
      ref: cerbos:///fleet.json
      ignoreWhen:
        actions: ["create", "create:*"]
